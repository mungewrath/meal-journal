name: "CI Pipeline"
run-name: "${{ inputs.run_name }}"

on:
  push:
    branches: ["main"]
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      terraform_apply_stage:
        description: "Apply Terraform changes to Stage"
        required: false
        default: false
        type: boolean
      run_name:
        description: "Name for this workflow run"
        required: false
        default: "Manual Pipeline run"
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  web-build-stage:
    name: "Web (Stage)"
    uses: ./.github/workflows/web_build.yml
    with:
      environment: stage

  web-build-prod:
    name: "Web (Prod)"
    uses: ./.github/workflows/web_build.yml
    with:
      environment: prod

  backend-build:
    name: "Backend Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          # Install a specific version of uv.
          version: "0.5.29"
          enable-cache: true

      - name: Build
        run: |
          cd backend
          bash build-and-deploy.sh -s
        env:
          UV_SYSTEM_PYTHON: 1 # Needed for uv pip

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: api_lambda.zip
          path: backend/api_lambda.zip

      - name: Install dev dependencies
        run: |
          cd backend
          uv export -q --frozen --no-editable -o requirements.txt
          uv pip install --system -r requirements.txt

      - name: Run tests
        run: uv run pytest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  deploy-stage:
    name: "Deploy to Stage"
    needs:
      - web-build-stage
      - backend-build
    uses: ./.github/workflows/terraform.yml
    with:
      terraform_workspace: stage
      terraform_apply: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' && true || (inputs.terraform_apply_stage || false) }}
      web_build_environment: stage

  deploy-prod-gate:
    name: "Deploy to Prod Approval"
    runs-on: ubuntu-latest
    needs:
      - deploy-stage
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: # Gates with manual approval
      name: production
    steps:
      - name: Wait for manual approval
        run: echo "Proceeding with deploy..."

  deploy-prod:
    name: "Deploy to Prod"
    needs:
      - deploy-prod-gate
      - web-build-prod
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    uses: ./.github/workflows/terraform.yml
    with:
      terraform_workspace: prod
      terraform_apply: true
      web_build_environment: prod
